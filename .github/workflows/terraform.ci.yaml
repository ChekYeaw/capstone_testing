name: CI/CD Pipeline for AWS Lambda & SES

on:
  push:
    branches: [ "dev" ]
    
jobs:
  basic-tests:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'


    steps:
    - name: Checkout
      uses: actions/checkout@v3
   
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform fmt
      run: terraform fmt -check

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Set Up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    - name: Install Dependencies
      run: npm install

    - name: Lint Code
      run: npm run lint

  full-integration-tests:
     runs-on: ubuntu-latest
     needs: basic-tests
     if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/uat' || github.ref == 'refs/heads/prod'
     env:
          AWS_REGION: ap-southeast-1
          DYNAMODB_TABLE: kpi-alerts
    
     steps:
     - name: Checkout Code
       uses: actions/checkout@v4
    
     - name: Set Up Node.js
       uses: actions/setup-node@v4
       with:
         node-version: 18
         cache: 'npm'
    
     - name: Install Dependencies
       run: npm install
    
     - name: Configure AWS Credentials
       uses: aws-actions/configure-aws-credentials@v2
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ${{ env.AWS_REGION }}
    