name: CI/CD Pipeline for Smart Industrial IoT

on:
  push:
    branches:
      - dev          # Auto-deploy to Dev
      - uat          # Auto-deploy to UAT
      - prod         # Requires manual approval for Production
    
    
jobs:
  basic-tests:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set Up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    - name: Install Dependencies
      run: npm install

    - name: Lint Code
      run: npm run lint

    - name: Unit Test
      run: npm run test

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Start LocalStack
      run: |
        docker run --rm -d -p 4566:4566 -p 4510-4559:4510-4559 localstack/localstack
    
    - name: Terraform fmt
      run: terraform fmt -check

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan

    - name: Run Terraform Apply (LocalStack)
      env:
          USE_LOCALSTACK: "true"
      run: |
          terraform apply -auto-approve

    - name: Terraform Destroy
      run: terraform destroy
          
          
  full-integration-tests:
     runs-on: ubuntu-latest
     needs: basic-tests
     if: github.ref == 'refs/heads/uat'
     
     env:
          AWS_REGION: ap-southeast-1
          DYNAMODB_TABLE: shop_floor_alerts
    
     steps:
     - name: Checkout Code
       uses: actions/checkout@v4
    
     - name: Set Up Node.js
       uses: actions/setup-node@v4
       with:
         node-version: 18
         cache: 'npm'
    
     - name: Install Dependencies
       run: npm install
    
     - name: Configure AWS Credentials
       uses: aws-actions/configure-aws-credentials@v2
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ${{ env.AWS_REGION }}
    
     - name: Setup Terraform
       uses: hashicorp/setup-terraform@v2

     - name: Terraform Init
       run: terraform init
 
     - name: Terraform Apply (Deploy Infrastructure)
       run: terraform apply -auto-approve
 
     - name: Wait for Deployment (Ensure services are up)
       run: sleep 60
 
     - name: Insert Item into DynamoDB
       env:
         DYNAMODB_TABLE: "shop_floor_alerts"  # DynamoDB table name
         AWS_REGION: "ap-southeast-1"         # AWS Region
       
       run: |
         aws dynamodb put-item --table-name $DYNAMODB_TABLE --item '{
           "PK": {"S": "PlantA_Line1"},
           "SK": {"S": "KpiName_Production Efficiency"},
           "Plant": {"S": "PlantA"},
           "Line": {"S": "Line1"},
           "KpiName": {"S": "Production Efficiency"},
           "KpiValue": {"N": "95"},
           "ThresholdValue": {"N": "90"}
         }' --region $AWS_REGION

