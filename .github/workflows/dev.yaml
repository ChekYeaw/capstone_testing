name: IIoT CICD Pipeline

# on:
#   workflow_dispatch:  # Manually trigger the workflow

on:
 pull_request:
   branches:
     - main

jobs:
  Build:
    runs-on: ubuntu-latest
    environment: main
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set Up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    - name: Install Dependencies
      run: npm install

    - name: Lint Code
      run: npm run lint

  Unit_Test:
    runs-on: ubuntu-latest
    needs: Build
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set Up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    - name: Install Dependencies
      run: npm install     

    - name: Unit Test
      run: npm run test

  Basic_Integration_Test:
    runs-on: ubuntu-latest
    needs: Unit_Test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set Up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform fmt
      run: terraform fmt -check
         
    # - name: Terraform Init
    #   run: terraform init

    # - name: Terraform Validate
    #   run: terraform validate

    - name: Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        framework: terraform

    # - name: Terraform Plan
    #   run: terraform plan

    # - name: Terraform Destroy
    #   run: terraform destroy -auto-approve

    # - name: Install Snyk
    #   run: npm install -g snyk

    # - name: Authenticate Snyk
    #   env:
    #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    #   run: snyk auth $SNYK_TOKEN

    # - name: Run Snyk code test
    #   run: snyk code test

    # - name: Run Snyk ignore 
    #   run: snyk ignore --id=SNYK-CC-AWS-415

    # - name: Run Snyk iac test
    #   run: snyk iac test

    # - name: Run Snyk test
    #   run: snyk test     

    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v2

    # - name: Terraform Format
    #   run: terraform fmt -recursive

    # - name: Terraform fmt
    #   run: terraform fmt -check

    # - name: Terraform Init
    #   run: terraform init

    # - name: Terraform Validate
    #   run: terraform validate

    # - name: Terraform Plan
    #   run: terraform plan

    # - name: Terraform Apply
    #   run: terraform apply -auto-approve

  # prod:
  #   runs-on: ubuntu-latest
  #   needs: uat
  #   if: github.base_ref == 'prod'
  #   environment: prod 

  #   steps:
  #     - name: Deploy
  #       run: echo "deploy to prod"

  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set Up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 18
  #         cache: 'npm'

  #     - name: Install Dependencies
  #       run: npm install

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ap-southeast-1
    
  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v2

  #     - name: Terraform Init
  #       run: terraform init

  #     - name: Terraform Plan
  #       run: terraform plan

  #     - name: Terraform Apply
  #       run: terraform apply -auto-approve
      

  #   env:
  #        AWS_REGION: ap-southeast-1
  #        DYNAMODB_TABLE: shop_floor_alerts
    
  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@v4
    
  #   - name: Set Up Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 18
  #       cache: 'npm'
    
  #   - name: Install Dependencies
  #     run: npm install
    
  #   - name: Configure AWS Credentials
  #     uses: aws-actions/configure-aws-credentials@v2
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: ${{ env.AWS_REGION }}
    
  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v2

  #   - name: Terraform Init
  #     run: terraform init
 
    #  - name: Terraform Apply (Deploy Infrastructure)
    #    run: terraform apply -auto-approve
 
    #  - name: Wait for Deployment (Ensure services are up)
    #    run: sleep 60
 
    #  - name: Insert Item into DynamoDB
    #    env:
    #      DYNAMODB_TABLE: "shop_floor_alerts"  # DynamoDB table name
    #      AWS_REGION: "ap-southeast-1"         # AWS Region
       
    #    run: |
    #      aws dynamodb put-item --table-name $DYNAMODB_TABLE --item '{
    #        "PK": {"S": "PlantA_Line1"},
    #        "SK": {"S": "KpiName_Production Efficiency"},
    #        "Plant": {"S": "PlantA"},
    #        "Line": {"S": "Line1"},
    #        "KpiName": {"S": "Production Efficiency"},
    #        "KpiValue": {"N": "95"},
    #        "ThresholdValue": {"N": "90"}
    #      }' --region $AWS_REGION

